#ifndef AST_STRUCTURE
#define AST_STRUCTURE

#include <memory>
#include <stdio.h>
#include <limits.h>
#include <math.h>
#include <bitset>
#include <string.h>

class Tree;
class RootNode;
class ProgramNode;
class VariableDeclarationNode;
class DeclarationSpecifierNode;
class StorageClassNode;
class TypeNode;
class QualifierNode;
class InitDeclarationListNode;
class InitDeclarationNode;
class DeclarationIdentifierNode;
class DirectDeclarationNode;
class PointerNode;
class QualifierListNode;
class InitializerNode;
class InitializerListNode;
class FunctionDeclarationNode;
class Ellipsis;
class ParameterTypeListNode;
class ParameterListNode;
class ParameterDeclarationNode;
class IdentifierListNode;
class CompoundStatementNode;
class CompoundListNode;
class DeclarationListNode;
class StatementListNode;
class LabelledStatementNode;
class ExpressionStatementNode;
class SelectionNode;
class IterationNode;
class JumpNode;
class ConstantExprNode;
class ExpressionNode;
class AssignmentExprNode;
class ConditionalExprNode;
class LogicalExprNode;
class BitExprNode;
class ShiftExprNode;
class AlgebraExprNode;
class CastExprNode;
class UnaryExprNode;
class PostFixExprNode;
class ArgumentExprNode;
class PrimaryExprNode;
class EnumeratorNode;
class EnumeratorListNode;
class EnumSpecifierNode;
class TypeNameNode;
class SpecifierQualifierListNode;
class AbstractDeclaratorNode;
class DirectAbstractDeclaratorNode;
class AbstractDeclaratorParameterNode;
class Variable;
class Number;
class String;
class InterpretContext;



#endif
